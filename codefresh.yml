version: "1.0"
stages:
  - "clone"
  - "build"
  - "test"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    git: github
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_BRANCH}}"
    stage: "clone"

  build_springboot:
    title: "Building Spring Boot app"
    image: maven:3.3-jdk-8
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository package
    stage: "build"

  build_images:
    type: parallel
    stage: "build"
    steps:
      spring:
        title: "Building Docker image for spring"
        type: "build"
        registry: docker-lr
        image_name: "lrochette/spring"
        working_directory: "${{clone}}"
        tag: "latest"
        dockerfile: "Dockerfile"
      kafka:
        title: "Building Docker image for Kafka"
        type: "build"
        registry: docker-lr
        image_name: "lrochette/kafka"
        working_directory: "${{clone}}/kafka"
        tag: "latest"
        dockerfile: "Dockerfile"

  test_app:
    stage: test
    image: ${{spring}}
    commands:
      - ls
    services:
     composition:
        zookeeper:
          image: wurstmeister/zookeeper
          ports:
            - "2181:2181"
        kafka:
            image: ${{kafka}}
            ports:
              - "9092:9092"
            environment:
              KAFKA_ADVERTISED_HOST_NAME: $CF_HOST_IP
              KAFKA_ZOOKEEPER_CONNECT: zk:2181
              KAFKA_MESSAGE_MAX_BYTES: 2000000
              KAFKA_CREATE_TOPICS: "Topic1:1:1"
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
            depends_on:
              - zookeeper
